// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"] 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum roles {
  STUDENT
  ADMIN
  TEACHER
}


model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role     roles    @default(STUDENT)
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Quiz Quiz[]
  Student_Answer Student_Answer[]
}

model Kerajaan {
  id        Int      @id @default(autoincrement())
  name      String
  startdate DateTime
  enddate   DateTime
  king_name String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Tokoh Tokoh[]
  questionCategories Question_Category[] @relation("KerajaanToQuestionCategory")
}

model Tokoh {
  id        Int      @id @default(autoincrement())
  name      String
  kerajaan  Kerajaan @relation(fields: [kerajaanId], references: [id])
  kerajaanId Int
  birthdate DateTime
  deathdate DateTime?
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  questionCategories Question_Category[] @relation("TokohToQuestionCategory")
}

model Question {
  id        Int      @id @default(autoincrement())
  category  Question_Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  text      String
  optionA   String
  optionB   String
  optionC   String
  optionD   String
  correctOption String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Student_Answer Student_Answer[]
}

model Question_Category { // Note: if kerajaan is false, it means the question is about tokoh
  id          Int      @id @default(autoincrement())
  isKerajaan  Boolean
  kerajaanId  Int?
  tokohId    Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Question Question[]
  kerajaan   Kerajaan? @relation("KerajaanToQuestionCategory", fields: [kerajaanId], references: [id])
  tokoh      Tokoh?    @relation("TokohToQuestionCategory", fields: [tokohId], references: [id])
}

model Quiz {
  id        Int      @id @default(autoincrement())
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  score     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Student_Answer Student_Answer[]
}

model Student_Answer {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  question  Question  @relation(fields: [questionId], references: [id])
  questionId Int
  quiz     Quiz?    @relation(fields: [quizId], references: [id])
  quizId   Int?
  selectedOption String
  isCorrect Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}